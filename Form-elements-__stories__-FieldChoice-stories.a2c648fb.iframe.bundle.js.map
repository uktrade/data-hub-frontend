{"version":3,"file":"Form-elements-__stories__-FieldChoice-stories.a2c648fb.iframe.bundle.js","mappings":";;;;;;;AAqBA;AACA;AAGA","sources":["webpack://data-hub-frontend/./src/client/components/Form/elements/__stories__/FieldChoice.stories.jsx"],"sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport FieldChoice from '../FieldChoice'\nimport Form from '../..'\n\nconst getGDSDocsUrl = (component) =>\n  `<a href=\"https://design-system.service.gov.uk/components/${component}\" target=\"_blank\" rel=\"noopener noreferrer\">GOV.UK Design System docs - ${component}</a>`\n\nconst GDS_DOCS_RADIOS_URL = getGDSDocsUrl('radios')\nconst GDS_DOCS_CHECKBOXES_URL = getGDSDocsUrl('checkboxes')\n\nconst inline = css`\n  fieldset div {\n    display: flex;\n  }\n  fieldset div label {\n    margin-right: 10px;\n  }\n`\n\nconst FieldChoiceRadioInline = styled(FieldChoice.Radio)`\n  ${inline}\n`\n\nconst countryOptions = [\n  {\n    value: '0',\n    label: 'England',\n  },\n  {\n    value: '1',\n    label: 'Wales',\n  },\n  {\n    value: '2',\n    label: 'Scotland',\n  },\n  {\n    value: '3',\n    label: 'Northern Ireland',\n  },\n]\n\nconst countryOptionsSubset = countryOptions.slice(0, 2)\n\nexport default {\n  title: 'Form/Form Elements/FieldChoice',\n  component: FieldChoice,\n  args: {\n    options: countryOptions,\n    name: 'country',\n    component: FieldChoice,\n  },\n  argTypes: {\n    type: 'string',\n    initialValues: { control: 'object' },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: `The <b>FieldChoice</b> component renders a group of radio buttons or checkboxes by setting the prop type to either \"radio\" or \"checkbox\".\n                    The component sets the entire selected option to the form's state which is helpful on user journeys where the final page is a summary page\n                    and you need to extract a label (or any other field) from a previous selection to display to the user. Instead of using FieldChoice directly,\n                    favour <b>FieldChoice.Radio</b>, <b>FieldChoice.Checkbox</b>, or <b>FieldChoice.Boolean</b> where the type is set for you.`,\n      },\n    },\n  },\n}\n\nconst Template = ({ component: Component, initialValues, ...args }, { id }) => (\n  <Form\n    id={id}\n    analyticsFormName=\"formRadio\"\n    submissionTaskName=\"SUBMISSION\"\n    initialValues={initialValues}\n  >\n    {(state) => (\n      <>\n        <Component {...args} />\n        <pre>{JSON.stringify(state, null, 2)}</pre>\n      </>\n    )}\n  </Form>\n)\n\nconst generateFormCode = ({\n  comments = [],\n  componentName,\n  props: { options = countryOptions, ...restProps },\n}) => {\n  let formCode = ''\n\n  comments.forEach((comment) => {\n    formCode += `// ${comment}\\n`\n  })\n\n  formCode += `\n<Form\n  id={id}\n  analyticsFormName=\"formRadio\"\n  submissionTaskName=\"SUBMISSION\"\n>\n  {(state) => (\n    <>\n      <${componentName}`\n\n  Object.keys(restProps).forEach((key) => {\n    const value = restProps[key]\n    if (value) {\n      formCode += `\n        ${key}=\"${value}\"`\n    }\n  })\n\n  if (options.length) {\n    formCode += `\n        options: [`\n\n    options.forEach((option, index) => {\n      formCode += `\n          {\n            value: '${option.value}',\n            label: '${option.label}',\n          }${index < options.length - 1 ? ',' : ''}`\n    })\n\n    formCode += `\n        ]`\n  }\n\n  formCode += `\n      />\n      <pre>{JSON.stringify(state, null, 2)}</pre>\n    </>\n  )}\n</Form>\n`\n  return formCode\n}\n\nconst formatCountry = (country) =>\n  `{ value: '${country.value}', label: '${country.label}' }`\n\n// Radios\nexport const Radios = Template.bind({})\nRadios.args = { type: 'radio' }\nRadios.parameters = {\n  docs: {\n    description: {\n      story: GDS_DOCS_RADIOS_URL,\n    },\n    source: {\n      code: generateFormCode({\n        componentName: 'FieldChoice.Radio',\n        props: {\n          name: 'country',\n        },\n      }),\n    },\n  },\n}\n\nexport const RadiosLabel = Template.bind({})\nRadiosLabel.storyName = 'Radios and label'\nRadiosLabel.args = {\n  ...Radios.args,\n  label: 'Where do you live',\n}\nRadiosLabel.parameters = {\n  docs: {\n    description: {\n      story: GDS_DOCS_RADIOS_URL,\n    },\n    source: {\n      code: generateFormCode({\n        componentName: 'FieldChoice.Radio',\n        props: {\n          name: 'country',\n          label: 'Where do you live',\n        },\n      }),\n    },\n  },\n}\n\nexport const RadiosLabelAndHint = Template.bind({})\nRadiosLabelAndHint.storyName = 'Radios with label and hint'\nRadiosLabelAndHint.args = {\n  ...Radios.args,\n  label: 'Where do you live',\n  hint: 'Select one option',\n}\nRadiosLabelAndHint.parameters = {\n  docs: {\n    description: {\n      story: GDS_DOCS_RADIOS_URL,\n    },\n    source: {\n      code: generateFormCode({\n        componentName: 'FieldChoice.Radio',\n        props: {\n          name: 'country',\n          label: 'Where do you live',\n          hint: 'Select one option',\n        },\n      }),\n    },\n  },\n}\n\nexport const RadiosLegend = Template.bind({})\nRadiosLegend.storyName = 'Radios and legend'\nRadiosLegend.args = {\n  ...Radios.args,\n  legend: <h1>H1 legend</h1>,\n}\nRadiosLegend.parameters = {\n  docs: {\n    description: {\n      story: GDS_DOCS_RADIOS_URL,\n    },\n    source: {\n      code: generateFormCode({\n        componentName: 'FieldChoice.Radio',\n        props: {\n          name: 'country',\n          legend: '{<h1>H1 legend</h1>}',\n        },\n      }),\n    },\n  },\n}\n\nexport const RadiosInline = Template.bind({})\nRadiosInline.storyName = 'Radios inline'\nRadiosInline.args = {\n  ...Radios.args,\n  component: FieldChoiceRadioInline,\n  options: countryOptionsSubset,\n}\nRadiosInline.parameters = {\n  docs: {\n    description: {\n      story: GDS_DOCS_RADIOS_URL,\n    },\n    source: {\n      code: generateFormCode({\n        componentName: 'FieldChoiceRadioInline',\n        props: {\n          name: 'country',\n          options: countryOptionsSubset,\n        },\n      }),\n    },\n  },\n}\n\nexport const RadiosRequired = Template.bind({})\nRadiosRequired.storyName = 'Radios selection required'\nRadiosRequired.args = {\n  ...Radios.args,\n  required: 'Select at least one country',\n}\nRadiosRequired.parameters = {\n  docs: {\n    description: {\n      story: `Radio button group where a selection is required. Click \"Save\" to view an error. ${GDS_DOCS_RADIOS_URL}`,\n    },\n    source: {\n      code: generateFormCode({\n        componentName: 'FieldChoice.Radio',\n        props: {\n          name: 'country',\n          required: 'Select at least one country',\n        },\n      }),\n    },\n  },\n}\n\nexport const RadiosPreselected = Template.bind({})\nRadiosPreselected.storyName = 'Radios preselected'\nconst country = countryOptions[0]\nRadiosPreselected.args = {\n  ...Radios.args,\n  initialValues: {\n    country,\n  },\n}\nRadiosPreselected.parameters = {\n  docs: {\n    description: {\n      story: GDS_DOCS_RADIOS_URL,\n    },\n    source: {\n      code: generateFormCode({\n        componentName: 'FieldChoice.Radio',\n        comments: [\n          'The form will automatically set the initial values providing the name',\n          \"field is set within the object that's returned by a transformer.\",\n          `For example: { country: ${formatCountry(country)} }`,\n        ],\n        props: {\n          name: 'country',\n        },\n      }),\n    },\n  },\n}\n\n// Checkbox\nexport const Checkboxes = Template.bind({})\nCheckboxes.args = { type: 'checkboxes' }\nCheckboxes.parameters = {\n  docs: {\n    description: {\n      story: GDS_DOCS_CHECKBOXES_URL,\n    },\n    source: {\n      code: generateFormCode({\n        componentName: 'FieldChoice.Checkbox',\n        props: {\n          name: 'country',\n        },\n      }),\n    },\n  },\n}\n\nexport const CheckboxesLabel = Template.bind({})\nCheckboxesLabel.storyName = 'Checkboxes and label'\nCheckboxesLabel.args = {\n  ...Checkboxes.args,\n  label: 'Where do you live',\n}\nCheckboxesLabel.parameters = {\n  docs: {\n    description: {\n      story: GDS_DOCS_CHECKBOXES_URL,\n    },\n    source: {\n      code: generateFormCode({\n        componentName: 'FieldChoice.Checkbox',\n        props: {\n          name: 'country',\n          label: 'Where do you live',\n        },\n      }),\n    },\n  },\n}\n\nexport const CheckboxesLabelAndHint = Template.bind({})\nCheckboxesLabelAndHint.storyName = 'Checkboxes label and hint'\nconst checkboxLabelAndHint = {\n  label: 'Where do you live',\n  hint: 'Select all that apply',\n}\nCheckboxesLabelAndHint.args = {\n  ...Checkboxes.args,\n  ...checkboxLabelAndHint,\n}\nCheckboxesLabelAndHint.parameters = {\n  docs: {\n    description: {\n      story: GDS_DOCS_CHECKBOXES_URL,\n    },\n    source: {\n      code: generateFormCode({\n        componentName: 'FieldChoice.Checkbox',\n        props: {\n          name: 'country',\n          ...checkboxLabelAndHint,\n        },\n      }),\n    },\n  },\n}\n\nexport const CheckboxesLegend = Template.bind({})\nCheckboxesLegend.storyName = 'Checkboxes and legend'\nCheckboxesLegend.args = {\n  ...Checkboxes.args,\n  legend: <h1>H1 legend</h1>,\n}\nCheckboxesLegend.parameters = {\n  docs: {\n    description: {\n      story: GDS_DOCS_CHECKBOXES_URL,\n    },\n    source: {\n      code: generateFormCode({\n        componentName: 'FieldChoice.Checkbox',\n        props: {\n          name: 'country',\n          legend: '{<h1>H1 legend</h1>}',\n        },\n      }),\n    },\n  },\n}\n\nexport const CheckboxesRequired = Template.bind({})\nCheckboxesRequired.storyName = 'Checkboxes selection required'\nCheckboxesRequired.args = {\n  ...Checkboxes.args,\n  required: 'Select at least one country',\n}\nCheckboxesRequired.parameters = {\n  docs: {\n    description: {\n      story: `Checkbox group where a selection is required. Click \"Save\" to view an error. ${GDS_DOCS_CHECKBOXES_URL}`,\n    },\n    source: {\n      code: generateFormCode({\n        componentName: 'FieldChoice.Checkbox',\n        props: {\n          name: 'country',\n          required: 'Select at least one country',\n        },\n      }),\n    },\n  },\n}\n\nexport const CheckboxPreselected = Template.bind({})\nCheckboxPreselected.storyName = 'Checkboxes preselected'\nCheckboxPreselected.args = {\n  ...Checkboxes.args,\n  initialValues: {\n    country: [countryOptions[0], countryOptions[1]],\n  },\n}\nCheckboxPreselected.parameters = {\n  docs: {\n    description: {\n      story: GDS_DOCS_CHECKBOXES_URL,\n    },\n    source: {\n      code: generateFormCode({\n        componentName: 'FieldChoice.Checkbox',\n        comments: [\n          'The form will automatically set the initial values providing the name',\n          \"field is set within the object that's returned by a transformer.\",\n          `For example: { country: [${formatCountry(countryOptions[0])}, ${formatCountry(countryOptions[1])}] }`,\n        ],\n        props: {\n          name: 'country',\n        },\n      }),\n    },\n  },\n}\n"],"names":[],"sourceRoot":""}