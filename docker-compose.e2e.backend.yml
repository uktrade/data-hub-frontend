version: '3'
services:
  frontend:
    depends_on:
      - api

  api:
    image: gcr.io/sre-docker-registry/github.com/uktrade/data-hub-api:main
    env_file: .env
    environment:
      DEBUG: 'False'
      RESOURCE_SERVER_AUTH_TOKEN: sso-token
      STAFF_SSO_BASE_URL: http://mock-sso:8080/
      STAFF_SSO_AUTH_TOKEN: sso-token
      ES_APM_ENABLED: 'False'
      COLUMNS: 80
      DJANGO_SUPERUSER_SSO_EMAIL_USER_ID: test@gov.uk
      ALLOW_TEST_FIXTURE_SETUP: 'True'
      DATABASE_CREDENTIALS: '{"username": "postgres", "password": "datahub", "engine": "postgres", "port": 5432, "dbname": "datahub", "host": "postgres", "dbInstanceIdentifier": "db-instance"}'
    ports:
      - 8000:8000
    depends_on:
      - postgres
      - opensearch
      - redis
      - rq
      - mock-sso
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://opensearch:9200 -wait tcp://redis:6379 -timeout 5m
    command: /app/setup-uat.sh || echo "all good"

  rq:
    image: gcr.io/sre-docker-registry/github.com/uktrade/data-hub-api:main
    env_file: .env
    depends_on:
      - postgres
      - opensearch
      - redis
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://opensearch:9200 -wait tcp://redis:6379 -timeout 5m
    command: python short-running-worker.py long-running-worker.py
    environment:
      DATABASE_CREDENTIALS: '{"username": "postgres", "password": "datahub", "engine": "postgres", "port": 5432, "dbname": "datahub", "host": "postgres", "dbInstanceIdentifier": "db-instance"}'

  postgres:
    image: postgres:16
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: datahub
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      DATABASE_CREDENTIALS: '{"username": "postgres", "password": "datahub", "engine": "postgres", "port": 5432, "dbname": "datahub", "host": "postgres", "dbInstanceIdentifier": "db-instance"}'

  opensearch:
    image: opensearchproject/opensearch:2.11.0
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - cluster.name=cluster-001
      - node.name=node-001
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - DISABLE_INSTALL_DEMO_CONFIG=true # Prevents execution of bundled demo script which installs demo certificates and security configurations to OpenSearch
      - DISABLE_SECURITY_PLUGIN=true # Disables security plugin
    logging:
      driver: none
