# This is a sample config file shared between FE and API instances.
# This file is also used with CircleCI tests.

# Frontend vars
ACCOUNT_PLAN_URLS={"000000001": "/some-test-account-plan-url","123456789": "/some-other-test-account-plan-urls"}
API_ROOT=http://api:8000
ARCHIVED_DOCUMENTS_BASE_URL=https://lookInVault.com/
DATA_HUB_BACKEND_ACCESS_KEY_ID=frontend-key-id
DATA_HUB_BACKEND_SECRET_ACCESS_KEY=frontend-key
DATA_STORE_SERVICE_ACCESS_KEY_ID=data-store-service-id
DATA_STORE_SERVICE_POSTCODE=https://lookInVault.com/
DATA_STORE_SERVICE_POSTCODE_TO_REGION_URL=https://lookInVault.com/
DATA_STORE_SERVICE_SECRET_ACCESS_KEY=data-store-service-key
ELASTIC_APM_SERVICE_NAME='some-service'
ELASTIC_APM_SERVER_URL=http://es-apm:8200
ELASTIC_APM_SECRET_TOKEN=12345
ELASTIC_APM_SERVER_TIMEOUT=1
HELP_CENTRE_ANNOUNCMENTS_URL=https://lookInVault.com/
HELP_CENTRE_API_FEED=http://api:8000/help-centre/announcement
HELP_CENTRE_FEED_API_TOKEN=lookInVault
HELP_CENTRE_URL=https://lookInVault.com/
NODE_ENV=development
ONE_LIST_EMAIL=look@in.vault.com
POSTCODE_KEY=lookInVault
REDIS_HOST=redis
REDIS_URL=redis://redis:6379
SESSION_SECRET=lookInVault
ZEN_EMAIL=look@in.vault.com
ZEN_TICKETS_URL=https://lookInVault.com/
ZEN_TOKEN=lookInVault

# See Vault for the correct URLs to use. 
# These URLs will default to production sites (as per the current behaviour) if left commented out. 
# MARKET_ACCESS_URL=
# FIND_EXPORTERS_URL=
# DATA_WORKSPACE_URL=

# API vars
ACTIVITY_STREAM_ACCESS_KEY_ID=some-id
ACTIVITY_STREAM_SECRET_ACCESS_KEY=some-secret
ADMIN_OAUTH2_ENABLED=false
AWS_ACCESS_KEY_ID=foo
AWS_DEFAULT_REGION=eu-west-2
AWS_SECRET_ACCESS_KEY=bar
# Workaround for Docker/CircleCI compatibility problem with Python 3.8
COLUMNS=80
DATA_HUB_FRONTEND_ACCESS_KEY_ID=frontend-key-id
DATA_HUB_FRONTEND_SECRET_ACCESS_KEY=frontend-key
DATABASE_URL=postgresql://user:password@postgres/datahub
DEBUG=false
DEFAULT_BUCKET=baz
DISABLE_PAAS_IP_CHECK=true
DJANGO_SECRET_KEY=topSecret
DJANGO_SETTINGS_MODULE=config.settings.local
DJANGO_SUPERUSER_EMAIL=choose@you.own.com
DJANGO_SUPERUSER_PASSWORD=whatEverYouWant
DJANGO_SUPERUSER_SSO_EMAIL_USER_ID=change.me@id.trade.local
ES5_URL=http://es:9200
ES_APM_ENABLED=False
ES_INDEX_PREFIX=test_index
POSTGRES_URL=tcp://postgres:5432
REDIS_BASE_URL=redis://redis:6379
REDIS_CACHE_DB=5
REDIS_CELERY_DB=6
RESOURCE_SERVER_INTROSPECTION_URL=http://mock-sso:8080/o/introspect
SSO_ENABLED=false
SUPERUSER_ACCESS_TOKEN=ditStaffToken
WEB_CONCURRENCY=2
CONSENT_SERVICE_BASE_URL=http://mock-third-party-services:8555
CONSENT_SERVICE_HAWK_ID=dummyId
CONSENT_SERVICE_HAWK_KEY=dummyKey
DNB_SERVICE_BASE_URL=http://mock-third-party-services:8888
DNB_SERVICE_TOKEN=dummyToken
COMPANY_MATCHING_SERVICE_BASE_URL=http://mock-third-party-services:8888
COMPANY_MATCHING_HAWK_ID=dummyId
COMPANY_MATCHING_HAWK_KEY=dummyKey


# To run without SSO (needed for some test suites)
# There is an implicit dependency on this matching the case of the JSON boolean as joi populates it in a JSON config file
OAUTH2_BYPASS_SSO=true
# This is needed so the test/functional/cypress/specs/oauth/oauth-spec.js::testSignOut doesn't fail
OAUTH2_LOGOUT_URL=http://anyurl/o/logout
OAUTH2_AUTH_URL=http://anyurl/o/authorize
# To use SSO in dev uncomment set OAUTH2_BYPASS_SSO=true and uncomment one of the sections below

# # To run locally (non-dockerised)
# OAUTH2_BYPASS_SSO=false
# OAUTH2_AUTH_URL=http://localhost:8080/o/authorize
# OAUTH2_LOGOUT_URL=http://localhost:8080/o/logout

# # To use mock-sso
# OAUTH2_TOKEN_FETCH_URL=http://mock-sso:8080/o/token
# OAUTH2_USER_PROFILE_URL=http://mock-sso:8080/api/v1/user/me
# OAUTH2_AUTH_URL=http://mock-sso:8080/o/authorize
# OAUTH2_REDIRECT_URL=http://localhost:3000/oauth/callback
# OAUTH2_LOGOUT_URL=http://mock-sso:8080/o/logout
# OAUTH2_CLIENT_SECRET=youAintSeenMyRight
# OAUTH2_CLIENT_ID=randomClientId

# # To use live SSO
# OAUTH2_AUTH_URL=get-from-vault
# OAUTH2_CLIENT_ID=get-from-vault
# OAUTH2_CLIENT_SECRET=get-from-vault
# OAUTH2_LOGOUT_URL=get-from-vault
# OAUTH2_REDIRECT_URL=http://localhost:3000/oauth/callback
# OAUTH2_TOKEN_FETCH_URL=get-from-vault
# OAUTH2_USER_PROFILE_URL=get-from-vault
