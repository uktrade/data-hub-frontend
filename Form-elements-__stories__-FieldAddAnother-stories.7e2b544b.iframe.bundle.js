"use strict";(self.webpackChunkdata_hub_frontend=self.webpackChunkdata_hub_frontend||[]).push([[3220],{"./src/client/components/Form/elements/__stories__/FieldAddAnother.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DocsPlaceholder:()=>DocsPlaceholder,Edit:()=>Edit,MultiStep:()=>MultiStep,New:()=>New,__namedExportsOrder:()=>__namedExportsOrder,default:()=>FieldAddAnother_stories});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js"),__webpack_require__("./node_modules/core-js/modules/es.object.entries.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.replace.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/react/index.js");var FieldAddAnother=__webpack_require__("./src/client/components/Form/elements/FieldAddAnother/index.jsx"),FieldTypeahead=__webpack_require__("./src/client/components/Form/elements/FieldTypeahead/index.jsx"),FieldInput=__webpack_require__("./src/client/components/Form/elements/FieldInput/index.jsx"),Form=__webpack_require__("./src/client/components/Form/index.jsx"),Step=__webpack_require__("./src/client/components/Form/elements/Step.jsx");__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}var transformArrayToObject=function transformArrayToObject(array){return(null==array?void 0:array.length)>0?array.reduce((function(previous,current){return _objectSpread(_objectSpread({},previous),current)})):{}};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function FieldAddAnother_stories_typeof(o){return FieldAddAnother_stories_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},FieldAddAnother_stories_typeof(o)}function FieldAddAnother_stories_defineProperty(e,r,t){return(r=function FieldAddAnother_stories_toPropertyKey(t){var i=function FieldAddAnother_stories_toPrimitive(t,r){if("object"!=FieldAddAnother_stories_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=FieldAddAnother_stories_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==FieldAddAnother_stories_typeof(i)?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function _slicedToArray(r,e){return function _arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(r,e)||function _unsupportedIterableToArray(r,a){if(r){if("string"==typeof r)return _arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a):void 0}}(r,e)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++)n[e]=r[e];return n}var options=[{value:"379f390a-e083-4a2c-9cea-e3b9a08606a7",label:"Bob Bobertson"},{value:"8dcd2bb8-dc73-4a42-8655-4ae42d4d3c5a",label:"Mary Maryson"},{value:"a6f39399-5bf4-46cb-a686-826f73e9f0ca",label:"Jane Doe"}],initialValues=[{adviser_0:{label:"Bob Bobertson",value:"1379f390a-e083-4a2c-9cea-e3b9a08606a723"},role_0:"Boss"},{adviser_1:{label:"Mary Maryson",value:"8dcd2bb8-dc73-4a42-8655-4ae42d4d3c5a"},role_1:"Minion"}],transformObjectBackToArray=function transformObjectBackToArray(valueAsObject){return Object.entries(valueAsObject).reduce((function(acc,_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],val=_ref2[1],rootKey=key.replace(/_./gm,"");return acc.push(FieldAddAnother_stories_defineProperty({},rootKey,val)),acc}),[])};const FieldAddAnother_stories={title:"Form/Form Elements/FieldAddAnother"};var DocsPlaceholder=function DocsPlaceholder(){return(0,jsx_runtime.jsx)("p",{children:"This is a workaround to get the DocsPage to work with multiInstance components."})};DocsPlaceholder.displayName="DocsPlaceholder",DocsPlaceholder.story={name:"Docs placeholder"};var Edit=function Edit(){return(0,jsx_runtime.jsx)(Form.A,{id:"fieldAddAnotherExample",analyticsFormName:"fieldAddAnotherExample",submissionTaskName:"Submit Form example",initialValues:transformArrayToObject(initialValues),children:function children(state){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(FieldAddAnother.A,{name:"teams_edit-example",legend:"Team members with roles",dataTestPrefix:"teams-field-",itemName:"team member",initialChildGroupCount:initialValues.length,limitChildGroupCount:4,children:function children(_ref3){var groupIndex=_ref3.groupIndex;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(FieldTypeahead.A,{name:"adviser_".concat(groupIndex),inputId:"adviser_".concat(groupIndex),label:"Team Member",options,placeholder:"Search advisers",required:"Select at least one Adviser","aria-label":"Select an adviser"}),(0,jsx_runtime.jsx)(FieldInput.A,{name:"role_".concat(groupIndex),type:"text",label:"Role"})]})}}),(0,jsx_runtime.jsxs)("pre",{children:["Using the data with the form setting and getting values"," ",JSON.stringify(state.values,null,2)]}),(0,jsx_runtime.jsxs)("pre",{children:["When sending data back to the database",JSON.stringify(transformObjectBackToArray(state.values),null,2)]})]})}})};Edit.displayName="Edit",Edit.story={parameters:{docs:{storyDescription:"\nThis is a form field component which enables rendering of multiple instances of the same field(s). The component takes as its children a function which returns the field(s) to be repeated. The argument to this function is the `{groupIndex}`, where:\n\n- ***groupIndex*** is the the index of FieldAddAnother component item\n\nThe ***initialValues*** is an array of grouped items. The ***transformArrayToObject*** function that will flatten this for the ***form*** component to deliver the values to the relative Field type components. \n\nThe **initialChildGroupCount** is an attribute informing the component of how many instances of the child components need to be rendered within the *FieldAddAnother* children and is primarily used in edit mode when showing values within the *FieldAddAnother* component. So in the example below there are two groups of adviser roles [adviser_0, role_0] and (adviser_1, role_1) and so the *initialChildGroupCount* should be ***2***. By default this is ***1*** and when no data is being assigned will show no component details until the *\"Add another\"* button is clicked.\n\nThe **limitChildGroupCount** limits the number of child components a user can add by removing the *\"Add another\"* button at the limit\n\n### Properties\n\n| Prop               | Required | Default | Type                           | Description                                                                                                                                            |\n| :----------------- | :------- | :------ | :----------------------------- | :----------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `name`             | true     |   | string                         | Text for name attribute value                                                                                                                          |\n| `label`            | false    | null    | string                         | Text for the label element                                                                                                                             |\n| `children`         | true     |   | function                       | Function that returns components to be rendered for each item in the list                                                                              |\n| `dataTestPrefix` | false    |                                                                            |string|Allows children to be selected via `[data-test='<data-test-prefix><index>']`|\n| `initialChildGroupCount` | false    | 1                                                            | number   | Number of child items groups that need to be repeated or added as a children from form on initial load |\n| `itemName` | true |  | string | For screen readers; What this field is a list of, for example if this were set to 'trade agreements' screen readers would read 'first trade agreement' |\n|                     |          |                                                              |          |                                                              |\n"}}};var New=function New(){return(0,jsx_runtime.jsx)(Form.A,{id:"fieldAddAnotherExample",analyticsFormName:"fieldAddAnotherExample",submissionTaskName:"Submit Form example",children:function children(state){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(FieldAddAnother.A,{name:"teams_new_edit_example",legend:"Team members with roles",dataTestPrefix:"teams-field-",itemName:"team member",children:function children(_ref4){var groupIndex=_ref4.groupIndex;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(FieldTypeahead.A,{name:"adviser_".concat(groupIndex),inputId:"adviser_".concat(groupIndex),label:"Team Member",options,placeholder:"Search advisers",required:"Select at least one Adviser","aria-label":"Select an adviser"}),(0,jsx_runtime.jsx)(FieldInput.A,{name:"role_".concat(groupIndex),type:"text",label:"Role"})]})}}),(0,jsx_runtime.jsxs)("pre",{children:["Using the data with the form setting and getting values"," ",JSON.stringify(state.values,null,2)]}),(0,jsx_runtime.jsxs)("pre",{children:["When sending data back to the database",JSON.stringify(transformObjectBackToArray(state.values),null,2)]})]})}})};New.displayName="New";var MultiStep=function MultiStep(){return(0,jsx_runtime.jsx)(Form.A,{id:"fieldAddAnotherMultiStepExample",submissionTaskName:"Submit Form example",initialValues:{"added-another-input_0":"Initial value 0","added-another-input_1":"Initial value 1","added-another-input_2":"Initial value 2"},children:function children(_ref5){var values=_ref5.values;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(Step.A,{name:"step-1",children:["Step 1",(0,jsx_runtime.jsx)(FieldInput.A,{label:"Step 1 input",name:"step-1-input"})]}),(0,jsx_runtime.jsxs)(Step.A,{name:"step-2",children:["Step 2",(0,jsx_runtime.jsx)(FieldInput.A,{label:"Step 2 input",name:"step-2-input"}),(0,jsx_runtime.jsx)(FieldAddAnother.A,{itemName:"thing",initialChildGroupCount:3,limitChildGroupCount:7,children:function children(_ref6){var groupIndex=_ref6.groupIndex;return(0,jsx_runtime.jsx)(FieldInput.A,{name:"added-another-input_".concat(groupIndex),type:"text",label:"Added another"})}})]}),(0,jsx_runtime.jsxs)(Step.A,{name:"step-3",children:["Step 3",(0,jsx_runtime.jsx)(FieldInput.A,{label:"Step 3 input",name:"step-3-input"})]}),(0,jsx_runtime.jsx)("pre",{children:JSON.stringify(values,null,2)})]})}})};MultiStep.displayName="MultiStep",DocsPlaceholder.parameters={...DocsPlaceholder.parameters,docs:{...DocsPlaceholder.parameters?.docs,source:{originalSource:"() => <p>\n    This is a workaround to get the DocsPage to work with multiInstance\n    components.\n  </p>",...DocsPlaceholder.parameters?.docs?.source}}},Edit.parameters={...Edit.parameters,docs:{...Edit.parameters?.docs,source:{originalSource:'() => <Form id="fieldAddAnotherExample" analyticsFormName="fieldAddAnotherExample" submissionTaskName="Submit Form example" initialValues={transformArrayToObject(initialValues)}>\n    {state => <>\n        <FieldAddAnother name="teams_edit-example" legend="Team members with roles" dataTestPrefix="teams-field-" itemName="team member" initialChildGroupCount={initialValues.length} limitChildGroupCount={4}>\n          {({\n        groupIndex\n      }) => <>\n              <FieldTypeahead name={`adviser_${groupIndex}`} inputId={`adviser_${groupIndex}`} label="Team Member" options={options} placeholder="Search advisers" required="Select at least one Adviser" aria-label="Select an adviser" />\n              <FieldInput name={`role_${groupIndex}`} type="text" label="Role" />\n            </>}\n        </FieldAddAnother>\n        <pre>\n          Using the data with the form setting and getting values{\' \'}\n          {JSON.stringify(state.values, null, 2)}\n        </pre>\n        <pre>\n          When sending data back to the database\n          {JSON.stringify(transformObjectBackToArray(state.values), null, 2)}\n        </pre>\n      </>}\n  </Form>',...Edit.parameters?.docs?.source}}},New.parameters={...New.parameters,docs:{...New.parameters?.docs,source:{originalSource:'() => <Form id="fieldAddAnotherExample" analyticsFormName="fieldAddAnotherExample" submissionTaskName="Submit Form example">\n    {state => <>\n        <FieldAddAnother name="teams_new_edit_example" legend="Team members with roles" dataTestPrefix="teams-field-" itemName="team member">\n          {({\n        groupIndex\n      }) => <>\n              <FieldTypeahead name={`adviser_${groupIndex}`} inputId={`adviser_${groupIndex}`} label="Team Member" options={options} placeholder="Search advisers" required="Select at least one Adviser" aria-label="Select an adviser" />\n              <FieldInput name={`role_${groupIndex}`} type="text" label="Role" />\n            </>}\n        </FieldAddAnother>\n        <pre>\n          Using the data with the form setting and getting values{\' \'}\n          {JSON.stringify(state.values, null, 2)}\n        </pre>\n        <pre>\n          When sending data back to the database\n          {JSON.stringify(transformObjectBackToArray(state.values), null, 2)}\n        </pre>\n      </>}\n  </Form>',...New.parameters?.docs?.source}}},MultiStep.parameters={...MultiStep.parameters,docs:{...MultiStep.parameters?.docs,source:{originalSource:'() => <Form id="fieldAddAnotherMultiStepExample" submissionTaskName="Submit Form example" initialValues={{\n  \'added-another-input_0\': \'Initial value 0\',\n  \'added-another-input_1\': \'Initial value 1\',\n  \'added-another-input_2\': \'Initial value 2\'\n}}>\n    {({\n    values\n  }) => <>\n        <Step name="step-1">\n          Step 1\n          <FieldInput label="Step 1 input" name="step-1-input" />\n        </Step>\n        <Step name="step-2">\n          Step 2\n          <FieldInput label="Step 2 input" name="step-2-input" />\n          <FieldAddAnother itemName="thing" initialChildGroupCount={3} limitChildGroupCount={7}>\n            {({\n          groupIndex\n        }) => <FieldInput name={`added-another-input_${groupIndex}`} type="text" label="Added another" />}\n          </FieldAddAnother>\n        </Step>\n        <Step name="step-3">\n          Step 3\n          <FieldInput label="Step 3 input" name="step-3-input" />\n        </Step>\n        <pre>{JSON.stringify(values, null, 2)}</pre>\n      </>}\n  </Form>',...MultiStep.parameters?.docs?.source}}};const __namedExportsOrder=["DocsPlaceholder","Edit","New","MultiStep"]}}]);