version: '3'
services:
  frontend:
    depends_on:
      - api

  api:
    image: gcr.io/sre-docker-registry/github.com/uktrade/data-hub-api:main
    env_file: .env
    environment:
      DEBUG: 'False'
      RESOURCE_SERVER_AUTH_TOKEN: sso-token
      STAFF_SSO_BASE_URL: http://mock-sso:8080/
      STAFF_SSO_AUTH_TOKEN: sso-token
      ES_APM_ENABLED: 'False'
      COLUMNS: 80
      DJANGO_SUPERUSER_SSO_EMAIL_USER_ID: test@gov.uk
      ALLOW_TEST_FIXTURE_SETUP: 'True'
      ACTIVITY_STREAM_OUTGOING_URL: http://activity-feed-reverseproxy:8081/v2/activities
      ACTIVITY_STREAM_OUTGOING_ACCESS_KEY_ID: incoming-some-id-1
      ACTIVITY_STREAM_OUTGOING_SECRET_ACCESS_KEY: incoming-some-secret-1
      ACTIVITY_STREAM_ACCESS_KEY_ID: some-id
      ACTIVITY_STREAM_INCOMING_ACCESS_KEY_ID: some-id
      ACTIVITY_STREAM_SECRET_ACCESS_KEY: some-secret
      ACTIVITY_STREAM_INCOMING_SECRET_ACCESS_KEY: some-secret
    ports:
      - 8000:8000
    depends_on:
      - postgres
      - opensearch
      - redis
      - rq
      - mock-sso
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://opensearch:9200 -wait tcp://redis:6379 -timeout 5m
    command: /app/setup-uat.sh || echo "all good"

  rq:
    image: gcr.io/sre-docker-registry/github.com/uktrade/data-hub-api:main
    env_file: .env
    depends_on:
      - postgres
      - opensearch
      - redis
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://opensearch:9200 -wait tcp://redis:6379 -timeout 5m
    command: python short-running-worker.py long-running-worker.py

  postgres:
    image: postgres:12
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: datahub
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password

  opensearch:
    image: opensearchproject/opensearch:1.2.4
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - cluster.name=cluster-001
      - node.name=node-001
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - DISABLE_INSTALL_DEMO_CONFIG=true # Prevents execution of bundled demo script which installs demo certificates and security configurations to OpenSearch
      - DISABLE_SECURITY_PLUGIN=true # Disables security plugin

  activity-feed-reverseproxy:
    build: ./test/end-to-end/proxy
    ports:
        - 8081:8081
    depends_on:
      - activity-feed

  activity-feed:
    build: https://github.com/uktrade/activity-stream.git
    depends_on:
      - postgres
      - opensearch
      - redis
      - api
    ports:
      - 8082:8082
    environment:
      - PORT=8082
      - 'VCAP_SERVICES={"redis":[{"credentials":{"uri":"redis://redis:6379"}}],"opensearch":[{"credentials":{"uri":"http://some-id:some-secret@opensearch:9200"}, "plan": "123-123-123" } ] }'
      - SENTRY_ENVIRONMENT=test
      - SENTRY_DSN=http://abc:cvb@localhost:9872/123
      - FEEDS__1__UNIQUE_ID=verification_feed_app
      - FEEDS__1__SEED=http://api:8000/v3/activity-stream/event
      - FEEDS__1__ACCESS_KEY_ID=some-id
      - FEEDS__1__SECRET_ACCESS_KEY=some-secret
      - FEEDS__1__TYPE=activity_stream
      - INCOMING_ACCESS_KEY_PAIRS__1__KEY_ID=incoming-some-id-1
      - INCOMING_ACCESS_KEY_PAIRS__1__SECRET_KEY=incoming-some-secret-1
      - INCOMING_ACCESS_KEY_PAIRS__1__PERMISSIONS__activities__1=__MATCH_ALL__
      - INCOMING_ACCESS_KEY_PAIRS__1__PERMISSIONS__objects__1=__MATCH_ALL__
      - INCOMING_IP_WHITELIST__1=1.2.3.4
      - INCOMING_IP_WHITELIST__2=2.3.4.5
