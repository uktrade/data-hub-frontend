{"version":3,"file":"Form-elements-__stories__-FieldChoice-stories.a197dc8c.iframe.bundle.js","mappings":";;;;;;;AAgBA;AACA;AAGA;AACA;AAGA","sources":["webpack://data-hub-frontend/./src/client/components/Form/elements/__stories__/FieldChoice.stories.jsx"],"sourcesContent":["import React from 'react'\nimport { H1 } from '@govuk-react/heading'\nimport styled, { css } from 'styled-components'\n\nimport FieldChoice from '../FieldChoice'\nimport Form from '../..'\n\nconst inline = css`\n  fieldset div {\n    display: flex;\n  }\n  fieldset div label {\n    margin-right: 10px;\n  }\n`\n\nconst FieldChoiceRadioInline = styled(FieldChoice.Radio)`\n  ${inline}\n`\n\nconst FieldChoiceCheckboxInline = styled(FieldChoice.Checkbox)`\n  ${inline}\n`\n\nconst options = [\n  {\n    value: '0',\n    label: 'England',\n  },\n  {\n    value: '1',\n    label: 'Wales',\n  },\n  {\n    value: '2',\n    label: 'Scotland',\n  },\n  {\n    value: '3',\n    label: 'Northern Ireland',\n  },\n]\n\nconst formatOption = (option) =>\n  `{ value: '${option.value}', label: '${option.label}' }`\n\nconst formatOptions = (options) => options.map(formatOption) //.join(', ')\n\nexport default {\n  title: 'Form/Form Elements/FieldChoice',\n  component: FieldChoice,\n  args: {\n    options,\n    name: 'country',\n    component: FieldChoice,\n  },\n  argTypes: {\n    type: 'string',\n    initialValues: { control: 'object' },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: `The <b>FieldChoice</b> component is designed to render a group of radio buttons or checkboxes by setting the prop type to either <b>\"radio\"</b> or <b>\"checkbox\"</b>.\n        The component sets the entire selected option (Object) to the Form's state which is helpful on user journeys where the final page is a summary page and you\n        need to pullout a name (or any other field) from a previous selection to display it to the user. At present, <b>FieldRadio</b> only writes the ID (String) to the form state.`,\n      },\n    },\n  },\n}\n\nconst Template = (\n  { component: Component, initialValues, ...args },\n  { id: storyId }\n) => (\n  <Form\n    id={storyId}\n    analyticsFormName=\"formRadio\"\n    submissionTaskName=\"SUBMISSION\"\n    initialValues={initialValues}\n  >\n    {(state) => (\n      <>\n        <Component {...args} />\n        <pre>{JSON.stringify(state, null, 2)}</pre>\n      </>\n    )}\n  </Form>\n)\n\nconst defaultFormProps = `\\n  id=\"form-id\"\\n  analyticsFormName=\"formRadio\"\\n  submissionTaskName=\"SUBMISSION\"`\nconst defaultComponentProps = `name=\"country\"`\n\nconst getForm = ({ component, formProp, componentProp }) => {\n  const formProps = formProp\n    ? `${defaultFormProps}\\n  ${formProp}`\n    : ` ${defaultFormProps}`\n\n  const componentProps = componentProp\n    ? `${defaultComponentProps}\n      ${componentProp}`\n    : `${defaultComponentProps}`\n  return `\n<Form ${formProps}>\n  {(state) => (\n    <${component}\n      ${componentProps}\n      options={[\n        ${formatOption(options[0])}\n        ${formatOption(options[1])}\n        ${formatOption(options[2])}\n        ${formatOption(options[3])}\n      ]}\n    />\n  )}\n</Form>\n`\n}\n\n// Radio\nexport const Radio = Template.bind({})\nRadio.args = {\n  type: 'radio',\n}\nRadio.parameters = {\n  docs: {\n    description: {\n      story: 'A group of 4 radio buttons',\n    },\n    source: {\n      code: getForm({ component: 'FieldChoice.Radio' }),\n    },\n  },\n}\n\nexport const RadioLabel = Template.bind({})\nRadioLabel.args = {\n  ...Radio.args,\n  label: 'Countries',\n}\nRadioLabel.parameters = {\n  docs: {\n    description: {\n      story: 'Radio button group label',\n    },\n    source: {\n      code: getForm({\n        component: 'FieldChoice.Radio',\n        componentProp: 'label=\"Countries\"',\n      }),\n    },\n  },\n}\n\nexport const RadioHint = Template.bind({})\nRadioHint.args = {\n  ...Radio.args,\n  hint: 'Country hint',\n}\nRadioHint.parameters = {\n  docs: {\n    description: {\n      story: 'Radio button group hint text',\n    },\n    source: {\n      code: getForm({\n        component: 'FieldChoice.Radio',\n        componentProp: 'hint=\"Country hint\"',\n      }),\n    },\n  },\n}\n\nexport const RadioLegend = Template.bind({})\nRadioLegend.args = {\n  ...Radio.args,\n  legend: <h1>My H1 legend</h1>,\n}\nRadioLegend.parameters = {\n  docs: {\n    description: {\n      story: 'Radio button group legend',\n    },\n    source: {\n      code: getForm({\n        component: 'FieldChoice.Radio',\n        componentProp: 'legend={<H1>My H1 legend</H1>}',\n      }),\n    },\n  },\n}\n\nexport const RadioInline = Template.bind({})\nRadioInline.args = {\n  ...Radio.args,\n  component: FieldChoiceRadioInline,\n}\nRadioInline.parameters = {\n  docs: {\n    description: {\n      story: 'Radio button group inline',\n    },\n    source: {\n      code: getForm({\n        component: 'FieldChoiceRadioInline',\n      }),\n    },\n  },\n}\n\nexport const RadioRequired = Template.bind({})\nRadioRequired.args = {\n  ...Radio.args,\n  required: 'Select at least one country',\n}\nRadioRequired.parameters = {\n  docs: {\n    description: {\n      story:\n        'Radio button group where a selection is required. Click \"Save\" to view the form validation error message.',\n    },\n    source: {\n      code: getForm({\n        component: 'FieldChoice.Radio',\n        componentProp: 'required=\"Select at least one country\"',\n      }),\n    },\n  },\n}\n\nexport const RadioSelected = Template.bind({})\nRadioSelected.args = {\n  ...Radio.args,\n  initialValues: {\n    // Radios require a single object\n    country: options[0],\n  },\n}\nRadioSelected.parameters = {\n  docs: {\n    description: {\n      story: 'Radio button group selected',\n    },\n    source: {\n      code: getForm({\n        component: 'FieldChoice.Radio',\n        formProp: `initialValues={{country: ${formatOption(options[0])}}}`,\n      }),\n    },\n  },\n}\n\n// Checkbox\nexport const Checkbox = Template.bind({})\nCheckbox.args = {\n  type: 'checkbox',\n}\nCheckbox.parameters = {\n  docs: {\n    description: {\n      story: 'A group of 4 checkboxes.',\n    },\n    source: {\n      code: getForm({\n        component: 'FieldChoice.Checkbox',\n      }),\n    },\n  },\n}\n\nexport const CheckboxLabel = Template.bind({})\nCheckboxLabel.args = {\n  ...Checkbox.args,\n  label: 'Countries',\n}\nCheckboxLabel.parameters = {\n  docs: {\n    description: {\n      story: 'Checkbox group label',\n    },\n    source: {\n      code: getForm({\n        component: 'FieldChoice.Checkbox',\n        componentProp: 'label=\"Countries\"',\n      }),\n    },\n  },\n}\n\nexport const CheckboxHint = Template.bind({})\nCheckboxHint.args = {\n  ...Checkbox.args,\n  hint: 'Country hint',\n}\nCheckboxHint.parameters = {\n  docs: {\n    description: {\n      story: 'Checkbox group hint text',\n    },\n    source: {\n      code: getForm({\n        component: 'FieldChoice.Checkbox',\n        componentProp: 'hint=\"Country hint\"',\n      }),\n    },\n  },\n}\n\nexport const CheckboxLegend = Template.bind({})\nCheckboxLegend.args = {\n  ...Checkbox.args,\n  legend: <H1>My H1 legend</H1>,\n}\nCheckboxLegend.parameters = {\n  docs: {\n    description: {\n      story: 'Checkbox group legend',\n    },\n    source: {\n      code: getForm({\n        component: 'FieldChoice.Checkbox',\n        componentProp: 'legend={<H1>My H1 legend</H1>}',\n      }),\n    },\n  },\n}\n\nexport const CheckboxInline = Template.bind({})\nCheckboxInline.args = {\n  ...Checkbox.args,\n  component: FieldChoiceCheckboxInline,\n}\nCheckboxInline.parameters = {\n  docs: {\n    description: {\n      story: 'Checkbox group inline',\n    },\n    source: {\n      code: getForm({\n        component: 'FieldChoiceCheckboxInline',\n      }),\n    },\n  },\n}\n\nexport const CheckboxRequired = Template.bind({})\nCheckboxRequired.args = {\n  ...Checkbox.args,\n  required: 'Choose one or more countries',\n}\nCheckboxRequired.parameters = {\n  docs: {\n    description: {\n      story:\n        'Checkbox group where a user must choose at least one country. Click \"Save\" to view the form validation error message.',\n    },\n    source: {\n      code: getForm({\n        component: 'FieldChoice.Checkbox',\n        componentProp: 'required=\"Choose one or more countries\"',\n      }),\n    },\n  },\n}\n\nexport const CheckboxChecked = Template.bind({})\nCheckboxChecked.args = {\n  ...Checkbox.args,\n  initialValues: {\n    // Checkboxes require an array of objects\n    country: [options[0], options[1]],\n  },\n}\nCheckboxChecked.parameters = {\n  docs: {\n    description: {\n      story: 'Checkbox group checked',\n    },\n    source: {\n      code: getForm({\n        component: 'FieldChoice.Checkbox',\n        formProp: `initialValues={{ country: [${formatOptions([options[0], options[1]])}]}}`,\n      }),\n    },\n  },\n}\n"],"names":[],"sourceRoot":""}