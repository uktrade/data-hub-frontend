{% from '../common.njk' import FromNow %}

{##
 # Render meta data item
 # @param {object} props
 # @param {string} props.label - metadata item label
 # @param {string} props.data - metadata item data
 # @param {string} props.data.id - API data id
 # @param {string} props.data.name - API data label
 # @param {string} [props.type] - value type (e.g. 'date' to format dates)
 # @param {string} [props.url] - link URL
 # @param {string} [props.urlLabel] - If the link should be shown next to the data, what text should the url show
 # @param {string} [props.isSelected] - whether the anchor should be have 'is-selected' state
 # @param {string} [props.isInert] - whether the value should be inert even if it has URL
 # @param {string} [props.isLabelHidden=false] - whether the label should be visually hidden
 # @param {string} [props.badgeModifier] - modifier for badge
 # @param {string} [props.highlightTerm] - text to use to apply highlight filter
 # @param {string|array} [props.modifier] - Modifier for the outer class (e.g. 'stacked')
 #}
{% macro MetaItem (props) %}
  {% set badgeModifier = props.badgeModifier | concat('') | reverse | join(' c-badge--') if props.badgeModifier %}
  {% set isLabelHidden = props.isLabelHidden | default(false) %}
  {% set itemValueClass = 'c-badge ' + badgeModifier if props.type === 'badge' else 'c-meta-list__item-value'%}

  {% if props.value %}
    {% if props.type === 'date' %}
      {% set metaItemValue = props.value | formatDate %}
    {% elif props.type === 'dateMonthYear' %}
      {% set metaItemValue = props.value | formatDate('MMMM yyyy') %}
    {% elif props.type === 'datetime' %}
      {% set metaItemValue = props.value | formatDateTime %}
    {% elif props.type === 'fromNow' %}
      {% set metaItemValue = FromNow({ datetime: props.value }) %}
    {% elif props.type === 'address' %}
      {% set metaItemValue = props.value | formatAddress %}
    {% else %}
      {% set metaItemValue = props.value.name | default(props.value) %}
    {% endif %}
    {% set value = metaItemValue | highlight(props.highlightTerm, true) %}

    <div class="{{ 'c-meta-list__item' | applyClassModifiers(props.modifier) }}">
      {% if props.label %}
        <span class="c-meta-list__item-label {{ 'u-visually-hidden' if isLabelHidden or props.type === 'badge' }}">
          {{- props.label -}}
        </span>
      {% endif %}
      {% if props.url and not props.isInert and not props.urlLabel %}
        <a
          class="{{ itemValueClass }} {{ 'is-selected' if props.isSelected }}"
          href="{{ props.url }}"
        >
          {{- value -}}
        </a>
      {% else %}
        <span class="{{ itemValueClass }}">
          {{- value -}}
          {% if props.url and props.urlLabel -%}
          &nbsp;- <a href="{{ props.url }}">{{ props.urlLabel }}</a>
          {%- endif %}
        </span>
      {% endif %}
    </div>
  {% endif %}
{% endmacro %}
