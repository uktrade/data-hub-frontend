"use strict";(self.webpackChunkdata_hub_frontend=self.webpackChunkdata_hub_frontend||[]).push([[7531],{"./src/client/components/TabNav/__stories__/TabNav.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,DocsPlaceholder:()=>DocsPlaceholder,Routed:()=>Routed,__namedExportsOrder:()=>__namedExportsOrder,default:()=>TabNav_stories});__webpack_require__("./node_modules/react/index.js");var TabNav=__webpack_require__("./src/client/components/TabNav/index.jsx");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const TabNav_stories={title:"TabNav"};var DocsPlaceholder=function DocsPlaceholder(){return(0,jsx_runtime.jsx)("p",{children:"This is a workaround to get the DocsPage to work with multiInstance components."})};DocsPlaceholder.displayName="DocsPlaceholder",DocsPlaceholder.story={name:"Docs placeholder"};var Default=function Default(){return(0,jsx_runtime.jsx)(TabNav.Z,{id:"example",label:"Example",selectedIndex:"bar",tabs:{foo:{label:"Foo",content:(0,jsx_runtime.jsx)("h1",{children:"Foo"})},bar:{label:"Bar",content:(0,jsx_runtime.jsx)(TabNav.Z,{id:"nested",label:"Nested",selectedIndex:"bbb",tabs:{aaa:{label:"A",content:"aaaaa"},bbb:{label:"B",content:"bbbbb"},ccc:{label:"C",content:"ccccc"}}})},baz:{label:"Baz",content:(0,jsx_runtime.jsx)("h3",{children:"Baz"})}}})};Default.displayName="Default",Default.story={parameters:{docs:{storyDescription:"Accessible, optionally routed tab navigation. Based on https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/Tab_Role\n\n### Properties\n\n| Prop            | Required | Default                                   | Type | Description |\n| :-------------- | :------- | :---------------------------------------- | :--- | :---------- |\n| `label`| Yes | `undefined`| `String`  | A label required for accessibility |\n| `routed`| No | `false` | `Boolean` | If `true` the component will set the current path of the route to the value of the selected index and vice versa |\n| `tabs`| Yes | `undefined` | An object or array of `{label: string, content: ReactNode}` objects | If `true` the component will set the current path of the route to the value of the selected index |\n| `keepQueryParams` | No | `false` | `Boolean` | If `true`, clicking through the navigation will keep any query params in the url.\n"}}};var Routed=function Routed(){return(0,jsx_runtime.jsx)(TabNav.Z,{id:"routed-example",label:"RoutedExample",selectedIndex:"bar",routed:!0,tabs:{"/foo":{label:"Foo",content:(0,jsx_runtime.jsx)("h1",{children:"Foo"})},"/bar":{label:"Bar",content:(0,jsx_runtime.jsx)("h2",{children:"Bar"})},"/baz":{label:"Baz",content:(0,jsx_runtime.jsx)("h3",{children:"Baz"})}}})};Routed.displayName="Routed",DocsPlaceholder.parameters={...DocsPlaceholder.parameters,docs:{...DocsPlaceholder.parameters?.docs,source:{originalSource:"() => <p>\n    This is a workaround to get the DocsPage to work with multiInstance\n    components.\n  </p>",...DocsPlaceholder.parameters?.docs?.source}}},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"() => <TabNav id=\"example\" label=\"Example\" selectedIndex=\"bar\" tabs={{\n  foo: {\n    label: 'Foo',\n    content: <h1>Foo</h1>\n  },\n  bar: {\n    label: 'Bar',\n    content: <TabNav id=\"nested\" label=\"Nested\" selectedIndex=\"bbb\" tabs={{\n      aaa: {\n        label: 'A',\n        content: 'aaaaa'\n      },\n      bbb: {\n        label: 'B',\n        content: 'bbbbb'\n      },\n      ccc: {\n        label: 'C',\n        content: 'ccccc'\n      }\n    }} />\n  },\n  baz: {\n    label: 'Baz',\n    content: <h3>Baz</h3>\n  }\n}} />",...Default.parameters?.docs?.source}}},Routed.parameters={...Routed.parameters,docs:{...Routed.parameters?.docs,source:{originalSource:"() => <TabNav id=\"routed-example\" label=\"RoutedExample\" selectedIndex=\"bar\" routed={true} tabs={{\n  '/foo': {\n    label: 'Foo',\n    content: <h1>Foo</h1>\n  },\n  '/bar': {\n    label: 'Bar',\n    content: <h2>Bar</h2>\n  },\n  '/baz': {\n    label: 'Baz',\n    content: <h3>Baz</h3>\n  }\n}} />",...Routed.parameters?.docs?.source}}};const __namedExportsOrder=["DocsPlaceholder","Default","Routed"]}}]);