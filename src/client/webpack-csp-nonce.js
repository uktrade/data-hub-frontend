/**
 * This single line of code is required to make Webpack bundled JavaScript
 * that violates our strict Content Security Policy (CSP) work with the policy.
 * This especially applies to the styled-components library.
 *
 * Our CSP policy `default-src 'self'` doesn't allow any methods of creating
 * code from strings as described here:
 * https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src#unsafe_eval_expressions
 *
 * The solution is to use a CSP nonce (unique for each response)
 * which we need to add to the CSP header `default-src 'self' nonce-{cspNonce}`
 * and which needs to be added to each inline <sctipt/> and <style/> HTML tags
 * as a `nonce="{cspNonce}" attribute.
 * The problem is that styled-components dynamically injects <style/> tags
 * which are rejected by our CSP policy if they don't have the `nonce`
 * attribute.
 *
 * There is an undocumented mechanism in styled-components where the library looks
 * for the presence of `window.__webpack_nonce__` global variable and if it's not
 * `undefined` it will use the value for the `nonce` attribute. This will also make
 * all code compiled with Webpack which uses `unsafe-eval` work with the strict CSP
 * policy.
 *
 * The mechanism however only works when `__webpack_nonce__` is assigned
 * in a module compiled by Webpack, i.e. it doesn't work when we assign the nonce to
 * `window.__webpack_nonce__` in an inline script tag in the HTML document.
 * Probably Webpack picks it up during compilation.
 *
 * The solution is to assign the `cspNonce` generated by the backend to
 * `window._____cspNonce_____` in an inline <script/> tag in the HTML and
 * then to assign it to `__webpack_nonce__` in this module.
 *
 * The solution is taken from here:
 * https://github.com/Webpack/Webpack/issues/8775#issuecomment-462570415
 *
 * We could also assign the nonce to `__webpack_require__.nc` instead with the same effect:
 * https://github.com/styled-components/styled-components/issues/887#issuecomment-789051197
 *
 * Official Webpack CSP documentation:
 * https://webpack.js.org/guides/csp/
 */
// eslint-disable-next-line no-undef
__webpack_nonce__ = window._____cspNonce_____
