"use strict";(self.webpackChunkdata_hub_frontend=self.webpackChunkdata_hub_frontend||[]).push([[7163],{"./src/client/components/Form/elements/__stories__/FieldChoice.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Checkbox:()=>Checkbox,CheckboxChecked:()=>CheckboxChecked,CheckboxHint:()=>CheckboxHint,CheckboxInline:()=>CheckboxInline,CheckboxLabel:()=>CheckboxLabel,CheckboxLegend:()=>CheckboxLegend,CheckboxRequired:()=>CheckboxRequired,Radio:()=>Radio,RadioHint:()=>RadioHint,RadioInline:()=>RadioInline,RadioLabel:()=>RadioLabel,RadioLegend:()=>RadioLegend,RadioRequired:()=>RadioRequired,RadioSelected:()=>RadioSelected,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_govuk_react_heading__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@govuk-react/heading/dist/govuk-react-heading.esm.js"),styled_components__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_FieldChoice__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/client/components/Form/elements/FieldChoice/index.jsx"),___WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/client/components/Form/index.jsx");const inline=styled_components__WEBPACK_IMPORTED_MODULE_4__.AH`
  fieldset div {
    display: flex;
  }
  fieldset div label {
    margin-right: 10px;
  }
`,FieldChoiceRadioInline=(0,styled_components__WEBPACK_IMPORTED_MODULE_4__.Ay)(_FieldChoice__WEBPACK_IMPORTED_MODULE_2__.A.Radio)`
  ${inline}
`,FieldChoiceCheckboxInline=(0,styled_components__WEBPACK_IMPORTED_MODULE_4__.Ay)(_FieldChoice__WEBPACK_IMPORTED_MODULE_2__.A.Checkbox)`
  ${inline}
`,options=[{value:"0",label:"England"},{value:"1",label:"Wales"},{value:"2",label:"Scotland"},{value:"3",label:"Northern Ireland"}],formatOption=option=>`{ value: '${option.value}', label: '${option.label}' }`,__WEBPACK_DEFAULT_EXPORT__={title:"Form/Form Elements/FieldChoice",component:_FieldChoice__WEBPACK_IMPORTED_MODULE_2__.A,args:{options,name:"country",component:_FieldChoice__WEBPACK_IMPORTED_MODULE_2__.A},argTypes:{type:"string",initialValues:{control:"object"}},parameters:{docs:{description:{component:'The <b>FieldChoice</b> component is designed to render a group of radio buttons or checkboxes by setting the prop type to either <b>"radio"</b> or <b>"checkbox"</b>.\n        The component sets the entire selected option (Object) to the Form\'s state which is helpful on user journeys where the final page is a summary page and you\n        need to pullout a name (or any other field) from a previous selection to display it to the user. At present, <b>FieldRadio</b> only writes the ID (String) to the form state.'}}}},Template=({component:Component,initialValues,...args},{id:storyId})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_3__.A,{id:storyId,analyticsFormName:"formRadio",submissionTaskName:"SUBMISSION",initialValues},(state=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,args),react__WEBPACK_IMPORTED_MODULE_0__.createElement("pre",null,JSON.stringify(state,null,2))))),defaultFormProps='\n  id="form-id"\n  analyticsFormName="formRadio"\n  submissionTaskName="SUBMISSION"',getForm=({component,formProp,componentProp})=>`\n<Form ${formProp?`${defaultFormProps}\n  ${formProp}`:` ${defaultFormProps}`}>\n  {(state) => (\n    <${component}\n      ${componentProp?`name="country"\n      ${componentProp}`:'name="country"'}\n      options={[\n        ${formatOption(options[0])}\n        ${formatOption(options[1])}\n        ${formatOption(options[2])}\n        ${formatOption(options[3])}\n      ]}\n    />\n  )}\n</Form>\n`,Radio=Template.bind({});Radio.args={type:"radio"},Radio.parameters={docs:{description:{story:"A group of 4 radio buttons"},source:{code:getForm({component:"FieldChoice.Radio"})}}};const RadioLabel=Template.bind({});RadioLabel.args={...Radio.args,label:"Countries"},RadioLabel.parameters={docs:{description:{story:"Radio button group label"},source:{code:getForm({component:"FieldChoice.Radio",componentProp:'label="Countries"'})}}};const RadioHint=Template.bind({});RadioHint.args={...Radio.args,hint:"Country hint"},RadioHint.parameters={docs:{description:{story:"Radio button group hint text"},source:{code:getForm({component:"FieldChoice.Radio",componentProp:'hint="Country hint"'})}}};const RadioLegend=Template.bind({});RadioLegend.args={...Radio.args,legend:react__WEBPACK_IMPORTED_MODULE_0__.createElement("h1",null,"My H1 legend")},RadioLegend.parameters={docs:{description:{story:"Radio button group legend"},source:{code:getForm({component:"FieldChoice.Radio",componentProp:"legend={<H1>My H1 legend</H1>}"})}}};const RadioInline=Template.bind({});RadioInline.args={...Radio.args,component:FieldChoiceRadioInline},RadioInline.parameters={docs:{description:{story:"Radio button group inline"},source:{code:getForm({component:"FieldChoiceRadioInline"})}}};const RadioRequired=Template.bind({});RadioRequired.args={...Radio.args,required:"Select at least one country"},RadioRequired.parameters={docs:{description:{story:'Radio button group where a selection is required. Click "Save" to view the form validation error message.'},source:{code:getForm({component:"FieldChoice.Radio",componentProp:'required="Select at least one country"'})}}};const RadioSelected=Template.bind({});RadioSelected.args={...Radio.args,initialValues:{country:options[0]}},RadioSelected.parameters={docs:{description:{story:"Radio button group selected"},source:{code:getForm({component:"FieldChoice.Radio",formProp:`initialValues={{country: ${formatOption(options[0])}}}`})}}};const Checkbox=Template.bind({});Checkbox.args={type:"checkbox"},Checkbox.parameters={docs:{description:{story:"A group of 4 checkboxes."},source:{code:getForm({component:"FieldChoice.Checkbox"})}}};const CheckboxLabel=Template.bind({});CheckboxLabel.args={...Checkbox.args,label:"Countries"},CheckboxLabel.parameters={docs:{description:{story:"Checkbox group label"},source:{code:getForm({component:"FieldChoice.Checkbox",componentProp:'label="Countries"'})}}};const CheckboxHint=Template.bind({});CheckboxHint.args={...Checkbox.args,hint:"Country hint"},CheckboxHint.parameters={docs:{description:{story:"Checkbox group hint text"},source:{code:getForm({component:"FieldChoice.Checkbox",componentProp:'hint="Country hint"'})}}};const CheckboxLegend=Template.bind({});CheckboxLegend.args={...Checkbox.args,legend:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_govuk_react_heading__WEBPACK_IMPORTED_MODULE_1__.H1,null,"My H1 legend")},CheckboxLegend.parameters={docs:{description:{story:"Checkbox group legend"},source:{code:getForm({component:"FieldChoice.Checkbox",componentProp:"legend={<H1>My H1 legend</H1>}"})}}};const CheckboxInline=Template.bind({});CheckboxInline.args={...Checkbox.args,component:FieldChoiceCheckboxInline},CheckboxInline.parameters={docs:{description:{story:"Checkbox group inline"},source:{code:getForm({component:"FieldChoiceCheckboxInline"})}}};const CheckboxRequired=Template.bind({});CheckboxRequired.args={...Checkbox.args,required:"Choose one or more countries"},CheckboxRequired.parameters={docs:{description:{story:'Checkbox group where a user must choose at least one country. Click "Save" to view the form validation error message.'},source:{code:getForm({component:"FieldChoice.Checkbox",componentProp:'required="Choose one or more countries"'})}}};const CheckboxChecked=Template.bind({});CheckboxChecked.args={...Checkbox.args,initialValues:{country:[options[0],options[1]]}},CheckboxChecked.parameters={docs:{description:{story:"Checkbox group checked"},source:{code:getForm({component:"FieldChoice.Checkbox",formProp:`initialValues={{ country: [${(options=>options.map(formatOption))([options[0],options[1]])}]}}`})}}},Radio.parameters={...Radio.parameters,docs:{...Radio.parameters?.docs,source:{originalSource:'({\n  component: Component,\n  initialValues,\n  ...args\n}, {\n  id: storyId\n}) => <Form id={storyId} analyticsFormName="formRadio" submissionTaskName="SUBMISSION" initialValues={initialValues}>\n    {state => <>\n        <Component {...args} />\n        <pre>{JSON.stringify(state, null, 2)}</pre>\n      </>}\n  </Form>',...Radio.parameters?.docs?.source}}},RadioLabel.parameters={...RadioLabel.parameters,docs:{...RadioLabel.parameters?.docs,source:{originalSource:'({\n  component: Component,\n  initialValues,\n  ...args\n}, {\n  id: storyId\n}) => <Form id={storyId} analyticsFormName="formRadio" submissionTaskName="SUBMISSION" initialValues={initialValues}>\n    {state => <>\n        <Component {...args} />\n        <pre>{JSON.stringify(state, null, 2)}</pre>\n      </>}\n  </Form>',...RadioLabel.parameters?.docs?.source}}},RadioHint.parameters={...RadioHint.parameters,docs:{...RadioHint.parameters?.docs,source:{originalSource:'({\n  component: Component,\n  initialValues,\n  ...args\n}, {\n  id: storyId\n}) => <Form id={storyId} analyticsFormName="formRadio" submissionTaskName="SUBMISSION" initialValues={initialValues}>\n    {state => <>\n        <Component {...args} />\n        <pre>{JSON.stringify(state, null, 2)}</pre>\n      </>}\n  </Form>',...RadioHint.parameters?.docs?.source}}},RadioLegend.parameters={...RadioLegend.parameters,docs:{...RadioLegend.parameters?.docs,source:{originalSource:'({\n  component: Component,\n  initialValues,\n  ...args\n}, {\n  id: storyId\n}) => <Form id={storyId} analyticsFormName="formRadio" submissionTaskName="SUBMISSION" initialValues={initialValues}>\n    {state => <>\n        <Component {...args} />\n        <pre>{JSON.stringify(state, null, 2)}</pre>\n      </>}\n  </Form>',...RadioLegend.parameters?.docs?.source}}},RadioInline.parameters={...RadioInline.parameters,docs:{...RadioInline.parameters?.docs,source:{originalSource:'({\n  component: Component,\n  initialValues,\n  ...args\n}, {\n  id: storyId\n}) => <Form id={storyId} analyticsFormName="formRadio" submissionTaskName="SUBMISSION" initialValues={initialValues}>\n    {state => <>\n        <Component {...args} />\n        <pre>{JSON.stringify(state, null, 2)}</pre>\n      </>}\n  </Form>',...RadioInline.parameters?.docs?.source}}},RadioRequired.parameters={...RadioRequired.parameters,docs:{...RadioRequired.parameters?.docs,source:{originalSource:'({\n  component: Component,\n  initialValues,\n  ...args\n}, {\n  id: storyId\n}) => <Form id={storyId} analyticsFormName="formRadio" submissionTaskName="SUBMISSION" initialValues={initialValues}>\n    {state => <>\n        <Component {...args} />\n        <pre>{JSON.stringify(state, null, 2)}</pre>\n      </>}\n  </Form>',...RadioRequired.parameters?.docs?.source}}},RadioSelected.parameters={...RadioSelected.parameters,docs:{...RadioSelected.parameters?.docs,source:{originalSource:'({\n  component: Component,\n  initialValues,\n  ...args\n}, {\n  id: storyId\n}) => <Form id={storyId} analyticsFormName="formRadio" submissionTaskName="SUBMISSION" initialValues={initialValues}>\n    {state => <>\n        <Component {...args} />\n        <pre>{JSON.stringify(state, null, 2)}</pre>\n      </>}\n  </Form>',...RadioSelected.parameters?.docs?.source}}},Checkbox.parameters={...Checkbox.parameters,docs:{...Checkbox.parameters?.docs,source:{originalSource:'({\n  component: Component,\n  initialValues,\n  ...args\n}, {\n  id: storyId\n}) => <Form id={storyId} analyticsFormName="formRadio" submissionTaskName="SUBMISSION" initialValues={initialValues}>\n    {state => <>\n        <Component {...args} />\n        <pre>{JSON.stringify(state, null, 2)}</pre>\n      </>}\n  </Form>',...Checkbox.parameters?.docs?.source}}},CheckboxLabel.parameters={...CheckboxLabel.parameters,docs:{...CheckboxLabel.parameters?.docs,source:{originalSource:'({\n  component: Component,\n  initialValues,\n  ...args\n}, {\n  id: storyId\n}) => <Form id={storyId} analyticsFormName="formRadio" submissionTaskName="SUBMISSION" initialValues={initialValues}>\n    {state => <>\n        <Component {...args} />\n        <pre>{JSON.stringify(state, null, 2)}</pre>\n      </>}\n  </Form>',...CheckboxLabel.parameters?.docs?.source}}},CheckboxHint.parameters={...CheckboxHint.parameters,docs:{...CheckboxHint.parameters?.docs,source:{originalSource:'({\n  component: Component,\n  initialValues,\n  ...args\n}, {\n  id: storyId\n}) => <Form id={storyId} analyticsFormName="formRadio" submissionTaskName="SUBMISSION" initialValues={initialValues}>\n    {state => <>\n        <Component {...args} />\n        <pre>{JSON.stringify(state, null, 2)}</pre>\n      </>}\n  </Form>',...CheckboxHint.parameters?.docs?.source}}},CheckboxLegend.parameters={...CheckboxLegend.parameters,docs:{...CheckboxLegend.parameters?.docs,source:{originalSource:'({\n  component: Component,\n  initialValues,\n  ...args\n}, {\n  id: storyId\n}) => <Form id={storyId} analyticsFormName="formRadio" submissionTaskName="SUBMISSION" initialValues={initialValues}>\n    {state => <>\n        <Component {...args} />\n        <pre>{JSON.stringify(state, null, 2)}</pre>\n      </>}\n  </Form>',...CheckboxLegend.parameters?.docs?.source}}},CheckboxInline.parameters={...CheckboxInline.parameters,docs:{...CheckboxInline.parameters?.docs,source:{originalSource:'({\n  component: Component,\n  initialValues,\n  ...args\n}, {\n  id: storyId\n}) => <Form id={storyId} analyticsFormName="formRadio" submissionTaskName="SUBMISSION" initialValues={initialValues}>\n    {state => <>\n        <Component {...args} />\n        <pre>{JSON.stringify(state, null, 2)}</pre>\n      </>}\n  </Form>',...CheckboxInline.parameters?.docs?.source}}},CheckboxRequired.parameters={...CheckboxRequired.parameters,docs:{...CheckboxRequired.parameters?.docs,source:{originalSource:'({\n  component: Component,\n  initialValues,\n  ...args\n}, {\n  id: storyId\n}) => <Form id={storyId} analyticsFormName="formRadio" submissionTaskName="SUBMISSION" initialValues={initialValues}>\n    {state => <>\n        <Component {...args} />\n        <pre>{JSON.stringify(state, null, 2)}</pre>\n      </>}\n  </Form>',...CheckboxRequired.parameters?.docs?.source}}},CheckboxChecked.parameters={...CheckboxChecked.parameters,docs:{...CheckboxChecked.parameters?.docs,source:{originalSource:'({\n  component: Component,\n  initialValues,\n  ...args\n}, {\n  id: storyId\n}) => <Form id={storyId} analyticsFormName="formRadio" submissionTaskName="SUBMISSION" initialValues={initialValues}>\n    {state => <>\n        <Component {...args} />\n        <pre>{JSON.stringify(state, null, 2)}</pre>\n      </>}\n  </Form>',...CheckboxChecked.parameters?.docs?.source}}};const __namedExportsOrder=["Radio","RadioLabel","RadioHint","RadioLegend","RadioInline","RadioRequired","RadioSelected","Checkbox","CheckboxLabel","CheckboxHint","CheckboxLegend","CheckboxInline","CheckboxRequired","CheckboxChecked"]}}]);
//# sourceMappingURL=Form-elements-__stories__-FieldChoice-stories.843bb4e6.iframe.bundle.js.map