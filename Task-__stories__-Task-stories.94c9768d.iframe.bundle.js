"use strict";(self.webpackChunkdata_hub_frontend=self.webpackChunkdata_hub_frontend||[]).push([[5158],{"./src/client/components/Task/__stories__/Task.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Cancelation:()=>Cancelation,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/react/index.js");var ___WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/client/components/Task/index.jsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Task"};var Cancelation=function Cancelation(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(___WEBPACK_IMPORTED_MODULE_2__.A,{children:function children(task){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("ul",{children:["a","b","c"].map((function(id){var t=task("Task cancellation demo",id),startOptions={payload:id,onSuccessDispatch:"DONE-".concat(id)};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("li",{children:["id: ",id," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("button",{disabled:t.progress,onClick:function onClick(){return t.start(startOptions)},children:"start"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("button",{onClick:function onClick(){t.cancel(),t.start(startOptions)},children:"restart"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("button",{disabled:!t.progress,onClick:function onClick(){return t.cancel()},children:"cancel"})," ","status: ",t.status]},id)}))})}})};Cancelation.displayName="Cancelation",Cancelation.parameters={...Cancelation.parameters,docs:{...Cancelation.parameters?.docs,source:{originalSource:"() => <Task>\n    {task => <ul>\n        {['a', 'b', 'c'].map(id => {\n      const t = task('Task cancellation demo', id);\n      const startOptions = {\n        payload: id,\n        onSuccessDispatch: `DONE-${id}`\n      };\n      return <li key={id}>\n              id: {id}{' '}\n              <button disabled={t.progress} onClick={() => t.start(startOptions)}>\n                start\n              </button>\n              <button onClick={() => {\n          t.cancel();\n          t.start(startOptions);\n        }}>\n                restart\n              </button>\n              <button disabled={!t.progress} onClick={() => t.cancel()}>\n                cancel\n              </button>{' '}\n              status: {t.status}\n            </li>;\n    })}\n      </ul>}\n  </Task>",...Cancelation.parameters?.docs?.source}}};const __namedExportsOrder=["Cancelation"]}}]);