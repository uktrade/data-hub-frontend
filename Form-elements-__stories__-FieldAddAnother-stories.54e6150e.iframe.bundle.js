"use strict";(self.webpackChunkdata_hub_frontend=self.webpackChunkdata_hub_frontend||[]).push([[1893],{"./src/client/components/Form/elements/__stories__/FieldAddAnother.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DocsPlaceholder:()=>DocsPlaceholder,Edit:()=>Edit,New:()=>New,__namedExportsOrder:()=>__namedExportsOrder,default:()=>FieldAddAnother_stories});__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.object.entries.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("./node_modules/core-js/modules/es.string.replace.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/react/index.js");var FieldAddAnother=__webpack_require__("./src/client/components/Form/elements/FieldAddAnother/index.jsx"),FieldTypeahead=__webpack_require__("./src/client/components/Form/elements/FieldTypeahead/index.jsx"),FieldInput=__webpack_require__("./src/client/components/Form/elements/FieldInput/index.jsx"),Form=__webpack_require__("./src/client/components/Form/index.jsx");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!==_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var transformArrayToObject=function transformArrayToObject(array){return(null==array?void 0:array.length)>0?array.reduce((function(previous,current){return _objectSpread(_objectSpread({},previous),current)})):{}};var _DocsPlaceholder$para,_DocsPlaceholder$para2,_DocsPlaceholder$para3,_Edit$parameters,_Edit$parameters2,_Edit$parameters2$doc,_New$parameters,_New$parameters2,_New$parameters2$docs,jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function FieldAddAnother_stories_typeof(o){return FieldAddAnother_stories_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},FieldAddAnother_stories_typeof(o)}function FieldAddAnother_stories_ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function FieldAddAnother_stories_objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?FieldAddAnother_stories_ownKeys(Object(t),!0).forEach((function(r){FieldAddAnother_stories_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):FieldAddAnother_stories_ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function FieldAddAnother_stories_defineProperty(obj,key,value){return(key=function FieldAddAnother_stories_toPropertyKey(arg){var key=function FieldAddAnother_stories_toPrimitive(input,hint){if("object"!==FieldAddAnother_stories_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==FieldAddAnother_stories_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===FieldAddAnother_stories_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var options=[{value:"379f390a-e083-4a2c-9cea-e3b9a08606a7",label:"Bob Bobertson"},{value:"8dcd2bb8-dc73-4a42-8655-4ae42d4d3c5a",label:"Mary Maryson"},{value:"a6f39399-5bf4-46cb-a686-826f73e9f0ca",label:"Jane Doe"}],initialValues=[{adviser_0:{label:"Bob Bobertson",value:"1379f390a-e083-4a2c-9cea-e3b9a08606a723"},role_0:"Boss"},{adviser_1:{label:"Mary Maryson",value:"8dcd2bb8-dc73-4a42-8655-4ae42d4d3c5a"},role_1:"Minion"}],transformObjectBackToArray=function transformObjectBackToArray(valueAsObject){return Object.entries(valueAsObject).reduce((function(acc,_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],val=_ref2[1],rootKey=key.replace(/_./gm,"");return acc.push(FieldAddAnother_stories_defineProperty({},rootKey,val)),acc}),[])};const FieldAddAnother_stories={title:"Form/Form Elements/FieldAddAnother"};var DocsPlaceholder=function DocsPlaceholder(){return(0,jsx_runtime.jsx)("p",{children:"This is a workaround to get the DocsPage to work with multiInstance components."})};DocsPlaceholder.displayName="DocsPlaceholder",DocsPlaceholder.story={name:"Docs placeholder"};var Edit=function Edit(){return(0,jsx_runtime.jsx)(Form.Z,{id:"fieldAddAnotherExample",analyticsFormName:"fieldAddAnotherExample",submissionTaskName:"Submit Form example",initialValues:transformArrayToObject(initialValues),children:function children(state){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(FieldAddAnother.Z,{name:"teams_edit-example",legend:"Team members with roles",dataTestPrefix:"teams-field-",itemName:"team member",initialChildGroupCount:initialValues.length,limitChildGroupCount:4,children:function children(_ref3){var groupIndex=_ref3.groupIndex;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(FieldTypeahead.Z,{name:"adviser_".concat(groupIndex),inputId:"adviser_".concat(groupIndex),label:"Team Member",options,placeholder:"Search advisers",required:"Select at least one Adviser","aria-label":"Select an adviser"}),(0,jsx_runtime.jsx)(FieldInput.Z,{name:"role_".concat(groupIndex),type:"text",label:"Role"})]})}}),(0,jsx_runtime.jsxs)("pre",{children:["Using the data with the form setting and getting values"," ",JSON.stringify(state.values,null,2)]}),(0,jsx_runtime.jsxs)("pre",{children:["When sending data back to the database",JSON.stringify(transformObjectBackToArray(state.values),null,2)]})]})}})};Edit.displayName="Edit",Edit.story={parameters:{docs:{storyDescription:"\nThis is a form field component which enables rendering of multiple instances of the same field(s). The component takes as its children a function which returns the field(s) to be repeated. The argument to this function is the `{groupIndex}`, where:\n\n- ***groupIndex*** is the the index of FieldAddAnother component item\n\nThe ***initialValues*** is an array of grouped items. The ***transformArrayToObject*** function that will flatten this for the ***form*** component to deliver the values to the relative Field type components. \n\nThe **initialChildGroupCount** is an attribute informing the component of how many instances of the child components need to be rendered within the *FieldAddAnother* children and is primarily used in edit mode when showing values within the *FieldAddAnother* component. So in the example below there are two groups of adviser roles [adviser_0, role_0] and (adviser_1, role_1) and so the *initialChildGroupCount* should be ***2***. By default this is ***1*** and when no data is being assigned will show no component details until the *\"Add another\"* button is clicked.\n\nThe **limitChildGroupCount** limits the number of child components a user can add by removing the *\"Add another\"* button at the limit\n\n### Properties\n\n| Prop               | Required | Default | Type                           | Description                                                                                                                                            |\n| :----------------- | :------- | :------ | :----------------------------- | :----------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `name`             | true     |   | string                         | Text for name attribute value                                                                                                                          |\n| `label`            | false    | null    | string                         | Text for the label element                                                                                                                             |\n| `children`         | true     |   | function                       | Function that returns components to be rendered for each item in the list                                                                              |\n| `dataTestPrefix` | false    |                                                                            |string|Allows children to be selected via `[data-test='<data-test-prefix><index>']`|\n| `initialChildGroupCount` | false    | 1                                                            | number   | Number of child items groups that need to be repeated or added as a children from form on initial load |\n| `itemName` | true |  | string | For screen readers; What this field is a list of, for example if this were set to 'trade agreements' screen readers would read 'first trade agreement' |\n|                     |          |                                                              |          |                                                              |\n"}}};var New=function New(){return(0,jsx_runtime.jsx)(Form.Z,{id:"fieldAddAnotherExample",analyticsFormName:"fieldAddAnotherExample",submissionTaskName:"Submit Form example",children:function children(state){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(FieldAddAnother.Z,{name:"teams_new_edit_example",legend:"Team members with roles",dataTestPrefix:"teams-field-",itemName:"team member",children:function children(_ref4){var groupIndex=_ref4.groupIndex;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(FieldTypeahead.Z,{name:"adviser_".concat(groupIndex),inputId:"adviser_".concat(groupIndex),label:"Team Member",options,placeholder:"Search advisers",required:"Select at least one Adviser","aria-label":"Select an adviser"}),(0,jsx_runtime.jsx)(FieldInput.Z,{name:"role_".concat(groupIndex),type:"text",label:"Role"})]})}}),(0,jsx_runtime.jsxs)("pre",{children:["Using the data with the form setting and getting values"," ",JSON.stringify(state.values,null,2)]}),(0,jsx_runtime.jsxs)("pre",{children:["When sending data back to the database",JSON.stringify(transformObjectBackToArray(state.values),null,2)]})]})}})};New.displayName="New",DocsPlaceholder.parameters=FieldAddAnother_stories_objectSpread(FieldAddAnother_stories_objectSpread({},DocsPlaceholder.parameters),{},{docs:FieldAddAnother_stories_objectSpread(FieldAddAnother_stories_objectSpread({},null===(_DocsPlaceholder$para=DocsPlaceholder.parameters)||void 0===_DocsPlaceholder$para?void 0:_DocsPlaceholder$para.docs),{},{source:FieldAddAnother_stories_objectSpread({originalSource:"() => <p>\n    This is a workaround to get the DocsPage to work with multiInstance\n    components.\n  </p>"},null===(_DocsPlaceholder$para2=DocsPlaceholder.parameters)||void 0===_DocsPlaceholder$para2||null===(_DocsPlaceholder$para3=_DocsPlaceholder$para2.docs)||void 0===_DocsPlaceholder$para3?void 0:_DocsPlaceholder$para3.source)})}),Edit.parameters=FieldAddAnother_stories_objectSpread(FieldAddAnother_stories_objectSpread({},Edit.parameters),{},{docs:FieldAddAnother_stories_objectSpread(FieldAddAnother_stories_objectSpread({},null===(_Edit$parameters=Edit.parameters)||void 0===_Edit$parameters?void 0:_Edit$parameters.docs),{},{source:FieldAddAnother_stories_objectSpread({originalSource:'() => <Form id="fieldAddAnotherExample" analyticsFormName="fieldAddAnotherExample" submissionTaskName="Submit Form example" initialValues={transformArrayToObject(initialValues)}>\n    {state => <>\n        <FieldAddAnother name="teams_edit-example" legend="Team members with roles" dataTestPrefix="teams-field-" itemName="team member" initialChildGroupCount={initialValues.length} limitChildGroupCount={4}>\n          {({\n        groupIndex\n      }) => <>\n              <FieldTypeahead name={`adviser_${groupIndex}`} inputId={`adviser_${groupIndex}`} label="Team Member" options={options} placeholder="Search advisers" required="Select at least one Adviser" aria-label="Select an adviser" />\n              <FieldInput name={`role_${groupIndex}`} type="text" label="Role" />\n            </>}\n        </FieldAddAnother>\n        <pre>\n          Using the data with the form setting and getting values{\' \'}\n          {JSON.stringify(state.values, null, 2)}\n        </pre>\n        <pre>\n          When sending data back to the database\n          {JSON.stringify(transformObjectBackToArray(state.values), null, 2)}\n        </pre>\n      </>}\n  </Form>'},null===(_Edit$parameters2=Edit.parameters)||void 0===_Edit$parameters2||null===(_Edit$parameters2$doc=_Edit$parameters2.docs)||void 0===_Edit$parameters2$doc?void 0:_Edit$parameters2$doc.source)})}),New.parameters=FieldAddAnother_stories_objectSpread(FieldAddAnother_stories_objectSpread({},New.parameters),{},{docs:FieldAddAnother_stories_objectSpread(FieldAddAnother_stories_objectSpread({},null===(_New$parameters=New.parameters)||void 0===_New$parameters?void 0:_New$parameters.docs),{},{source:FieldAddAnother_stories_objectSpread({originalSource:'() => <Form id="fieldAddAnotherExample" analyticsFormName="fieldAddAnotherExample" submissionTaskName="Submit Form example">\n    {state => <>\n        <FieldAddAnother name="teams_new_edit_example" legend="Team members with roles" dataTestPrefix="teams-field-" itemName="team member">\n          {({\n        groupIndex\n      }) => <>\n              <FieldTypeahead name={`adviser_${groupIndex}`} inputId={`adviser_${groupIndex}`} label="Team Member" options={options} placeholder="Search advisers" required="Select at least one Adviser" aria-label="Select an adviser" />\n              <FieldInput name={`role_${groupIndex}`} type="text" label="Role" />\n            </>}\n        </FieldAddAnother>\n        <pre>\n          Using the data with the form setting and getting values{\' \'}\n          {JSON.stringify(state.values, null, 2)}\n        </pre>\n        <pre>\n          When sending data back to the database\n          {JSON.stringify(transformObjectBackToArray(state.values), null, 2)}\n        </pre>\n      </>}\n  </Form>'},null===(_New$parameters2=New.parameters)||void 0===_New$parameters2||null===(_New$parameters2$docs=_New$parameters2.docs)||void 0===_New$parameters2$docs?void 0:_New$parameters2$docs.source)})});var __namedExportsOrder=["DocsPlaceholder","Edit","New"];DocsPlaceholder.__docgenInfo={description:"",methods:[],displayName:"DocsPlaceholder"},Edit.__docgenInfo={description:"",methods:[],displayName:"Edit"},New.__docgenInfo={description:"",methods:[],displayName:"New"}}}]);