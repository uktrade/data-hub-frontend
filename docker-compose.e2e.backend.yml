version: '3'
services:
  frontend:
    depends_on:
      - api

  api:
    image: gcr.io/sre-docker-registry/github.com/uktrade/data-hub-api:develop
    env_file: .env
    environment:
      DEBUG: 'False'
      RESOURCE_SERVER_AUTH_TOKEN: sso-token
      STAFF_SSO_BASE_URL: http://mock-sso:8080/
      STAFF_SSO_AUTH_TOKEN: sso-token
      ES_APM_ENABLED: 'False'
      COLUMNS: 80
      DJANGO_SUPERUSER_SSO_EMAIL_USER_ID: test@gov.uk
      ALLOW_TEST_FIXTURE_SETUP: 'True'
    ports:
      - 8000:8000
    depends_on:
      - postgres
      - mi-postgres
      - es
      - redis
      - celery
      - mock-sso
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://mi-postgres:5432 -wait tcp://es:9200 -wait tcp://redis:6379 -timeout 5m
    command: /app/setup-uat.sh || echo "all good"

  celery:
    image: gcr.io/sre-docker-registry/github.com/uktrade/data-hub-api:develop
    env_file: .env
    depends_on:
      - postgres
      - mi-postgres
      - es
      - redis
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://mi-postgres:5432 -wait tcp://es:9200 -wait tcp://redis:6379 -timeout 5m
    command: celery worker -A config -l info -Q celery -B

  postgres:
    image: postgres:10
    environment:
      POSTGRES_DB: datahub
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password

  mi-postgres:
    image: postgres:9.6
    environment:
      POSTGRES_DB: datahub
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      discovery.type: single-node
      cluster.routing.allocation.disk.threshold_enabled: 'false'

  es-apm:
    image: docker.elastic.co/apm/apm-server:7.7.1
    ports:
      - 8200:8200
    command: >
      apm-server -e
        -E output.elasticsearch.hosts=["es:9200"]
    depends_on:
      - es
