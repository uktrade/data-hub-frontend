{##
 # Render form group container with label hint and field error message
 # @param {object} props - An object containing group properties
 # @param {string} props.name - Field name
 # @param {string} props.fieldId - Field id
 # @param {string} props.label - Field label
 # @param {string} [props.hint] - Field hint
 # @param {string} [props.error] - Field error
 # @param {string} [props.element=div] - Group element
 # @param {string, array} [props.modifier] - Group modifier
 # @param {boolean} [props.optional] - Marks field as optional
 # @param {boolean} [props.isLabelHidden=false] - Whether input label should be hidden
 # @param {boolean} [props.forceErrorMessage=false] - Whether error message and border should be shown even when label is hidden
 # @param {string} [props.condition.name] - Name of the field that controls this form group if it is a subfield
 # @param {string} [props.condition.value] - Value of the field that controls this form group if it is a subfield
 # @param {string} [props.innerHTML] - Optional inner HTML content
 # @param {array}  [props.children] - an array of inner macro configurations
 #
 # @param {function} props.caller - Inner contents

 #}
{% macro FormGroup(props) %}
  {% set groupElement = props.element or 'div' %}
  {% set isFieldset = groupElement == 'fieldset' %}
  {% set isLabelHidden = props.isLabelHidden | default(false) %}
  {% set forceErrorMessage = props.forceErrorMessage | default(false) %}
  {% set isConditional = props.condition %}
  {% set className = props.groupClassName | default('c-form-group') %}
  {% set labelElement = 'legend' if isFieldset else 'label' %}
  {% set labelClassName = className + '__label' if className === 'c-form-group' else className + '__legend' %}
  {% set isLegend = 'legend' if isFieldset %}
  {% set children = caller() if caller else renderAsMacro(props.children) %}

  {% if props.label and props.name -%}
    <{{ groupElement }}
      id="group-{{ props.fieldId }}"
      class="
        {{ className | applyClassModifiers(props.modifier) }}
        {{ 'has-error' if props.error and (not isLabelHidden or forceErrorMessage) }}
        {{ 'js-ConditionalSubfield' if isConditional }}
        {{ props.class if props.class }}
      "
      data-test="group-{{ props.fieldId }}"
      {% if isConditional %}
        data-controlled-by="{{ props.condition.name }}"
        data-control-value="{{ props.condition.value }}"
      {% endif %}
    >
      <{{ labelElement }}
        class="
          {{ labelClassName }}
          {{ 'u-visually-hidden' if isLabelHidden and not (props.error and forceErrorMessage) }}
        "
        {% if labelElement == 'label' %}for="{{ props.fieldId }}"{% endif %}
      >
        {{ props.label }} {{ '(optional)' if props.optional }}
        {% if props.error and labelElement == 'label' %}
          <span class="c-form-group__error-message" data-test="field-error">{{ props.error }}</span>
        {% endif %}
        {% if props.hint %}
          <span class="c-form-group__hint" id="hint-{{ props.fieldId }}">{{ props.hint | safe }}</span>
        {% endif %}
      </{{ labelElement }}>

      {% if props.error and labelElement != 'label' %}
        <span class="c-form-group__error-message">{{ props.error }}</span>
      {% endif %}

      {% if children or props.innerHTML %}
        <div class="c-form-group__inner">
          {{ children }}
          {{ props.innerHTML | safe }}
        </div>
      {% endif %}
    </{{ groupElement }}>
  {%- endif %}
{% endmacro %}
